Abstract Contract Permissions(
    mut owner_: Address
) {
    enum PermissionsErrorCodes {
        Forbidden = 0
    }

    fn onlyOwner(caller: Address) -> () {
        checkCaller!(callerAddress!() == selfAddress!(), PermissionsErrorCodes.Forbidden)
        checkCaller!(caller == owner_, PermissionsErrorCodes.Forbidden)
    }

    // checkExternalCaller is true for public functions, so we could remove the flag
    @using(updateFields = true)
    pub fn changeOwner(newOwner: Address) -> () {
        onlyOwner(callerAddress!())

        owner_ = newOwner
    }
}
